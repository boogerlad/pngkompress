	:high_optimization
	:: All reductions tested before, but:
	:: - All strategy methods are tested
	truepng -f0,5 -i0 -g0 -a1 -md remove all -zc9 -zm3-9 -zs0-3 -force -y "%~f1"
		:: See "high_intense"
		for /f "tokens=1 delims=/c " %%i in ('pngout -l "%~f1"') do set "colortype=%%i"
	:: BitDepth Detection: ScriptPNG collects BitDepth value to use it after
	:: The bitdepth is collected only if PNG is Paletted (ColorType 3)
	if %colortype% equ 3 (
	for /f "tokens=3 delims=/d " %%i in ('pngout -l "%~f1"') do set "bitdepth=%%i"
	)
		:: See "high_intense" but with a better zlib compression level
		pngwolfz --in="%~f1" --out="%~f1" --exclude-singles --exclude-heuristic --zlib-level=9 --max-stagnate-time=0 --max-evaluations=1 --even-if-bigger

	:: ScriptPNG does a first try by asking PNGOUT to compress
	:: the file as a pure compressor, without modifying any settings

	:: The file is also re-encoded to RGB+alpha to prevent any
	:: colors influence during palette regeneration. This allow
	:: PNGOUT to find a best optimal palette with "-c3" option

	:: PNGOUT rewrites the palette entirely with "-c3" option, using
	:: a loop that consist to find the optimal compression block
	:: (also, each trial change the palette ordering)

	:: Finally, ScriptPNG compares the file

	if %colortype% equ 3 (
	start /b /low pngout -f6 -kp -ks -q -y -force "%~f1"
	pngout -c6 -s4 -q -y -force "%~f1" "%temporary_folder%%~n1-pal.png"
	for %%i in (1,2,3,4) do pngout -c3 -d%bitdepth% -n%%i -q -y "%temporary_folder%%~n1-pal.png"
	call:check_compare "%~f1" "%temporary_folder%%~n1-pal.png"
	)

	:: Zopfli Compression algorithm with 30 iterations
	:: of the best result
	advdef -z -4 -i 30 -q "%~f1"
		:: See "intense"
		set "stream=1"
		exit /b

	:: To optimize the file further, you can also add some features to this script.
	:: - For palette ordering, PNGOUT rewrites palette with different ways
	:: according to options. Samples:

	:: "pngout -ks myfile.png"
	::  + When there transparent colors, TruePNG should use its algorithm to
	::  + sort colors. Most of the time, colors are sorted in a way that
	::  + use 256 tRNS values.
	::  + PNGOUT "-ks" option should only rewrite tRNS value at the top of palette,
	::  + without affecting another colors ordering. This generate another result
	::  + that is not tested by ScriptPNG.

	:: "pngout -s3 myfile.png"
	:: Some samples, specially TrueColor (ColorType 2) with artifacts, could
	:: be better stored with Huffman Only, because compressed code is just
	:: bigger. ScriptPNG does not do this: JPG format should be better.

	:: Extended search:
	:: You should get smaller files if you change some settings, but not always.
	::  + "--max-evaluations=1", a higher value can help to find a better filtering
	::  + "advdef -z -4 -i 30", a higher value should compress more

	:check_compare
	if %~z1 leq %~z2 (1>nul 2>&1 del /f /q %2) else (1>nul 2>&1 move /y %2 %1 || exit /b 1)
	exit /b